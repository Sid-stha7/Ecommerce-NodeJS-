[{"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\store.js":"1","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\index.jsx":"2","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\App.jsx":"3","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\reducers\\productReducers.js":"4","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\constants\\productConstans.js":"5","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\footer.jsx":"6","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\header.jsx":"7","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\home.jsx":"8","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\MetaData.jsx":"9","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\products\\product.jsx":"10","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\loader.jsx":"11","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\action\\productActions.jsx":"12","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\products\\Product.jsx":"13","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\products\\ProductDetails.jsx":"14","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\layouts\\Search.js":"15","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\reducers\\userReducers.jsx":"16","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\constants\\userConstants.jsx":"17","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\user\\login.jsx":"18","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\action\\userActions.jsx":"19","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\user\\register.jsx":"20","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\user\\profile.jsx":"21","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\route\\protectedRoute.jsx":"22","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\user\\updateProfile.jsx":"23","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\user\\UpdateProfile.jsx":"24","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\user\\updatePassword.jsx":"25","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\reducers\\carReducers.jsx":"26","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\constants\\cartConstants.jsx":"27","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\action\\cartActions.js":"28","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\cart\\cart.jsx":"29","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\cart\\shipping.js":"30","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\cart\\checkOutSteps.jsx":"31","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\cart\\ConfirmOrder.jsx":"32","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\reducers\\orderReducers.jsx":"33","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\constants\\orderConstants.js":"34","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\order\\listOrders.jsx":"35","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\action\\orderActions.jsx":"36","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\order\\ListOrders.jsx":"37","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\cart\\orderSuccess.jsx":"38","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\cart\\payment.js":"39","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\order\\orderDetails.jsx":"40","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\admin\\Slidebar.jsx":"41","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\admin\\Dashboard.jsx":"42","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\admin\\productList.jsx":"43","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\admin\\newProduct.jsx":"44","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\admin\\UpdateProduct.jsx":"45","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\admin\\OrderList.jsx":"46","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\admin\\ProcessOrder.jsx":"47"},{"size":1588,"mtime":1667790476857,"results":"48","hashOfConfig":"49"},{"size":670,"mtime":1667544907778,"results":"50","hashOfConfig":"49"},{"size":4300,"mtime":1667876971884,"results":"51","hashOfConfig":"49"},{"size":3876,"mtime":1667791384541,"results":"52","hashOfConfig":"49"},{"size":1344,"mtime":1667730015674,"results":"53","hashOfConfig":"49"},{"size":327,"mtime":1667378141613,"results":"54","hashOfConfig":"49"},{"size":3131,"mtime":1667876846166,"results":"55","hashOfConfig":"49"},{"size":3533,"mtime":1667833335564,"results":"56","hashOfConfig":"49"},{"size":229,"mtime":1667382500412,"results":"57","hashOfConfig":"49"},{"size":1194,"mtime":1667544250872,"results":"58","hashOfConfig":"49"},{"size":126,"mtime":1667462039431,"results":"59","hashOfConfig":"49"},{"size":3899,"mtime":1667791418486,"results":"60","hashOfConfig":"49"},{"size":1243,"mtime":1667828997924,"results":"61","hashOfConfig":"49"},{"size":8346,"mtime":1667624385856,"results":"62","hashOfConfig":"49"},{"size":859,"mtime":1667556352630,"results":"63","hashOfConfig":"49"},{"size":3228,"mtime":1667811231436,"results":"64","hashOfConfig":"49"},{"size":2306,"mtime":1667559476514,"results":"65","hashOfConfig":"49"},{"size":2843,"mtime":1667561281292,"results":"66","hashOfConfig":"49"},{"size":3559,"mtime":1667619571663,"results":"67","hashOfConfig":"49"},{"size":4507,"mtime":1667577629028,"results":"68","hashOfConfig":"49"},{"size":1920,"mtime":1667616219681,"results":"69","hashOfConfig":"49"},{"size":803,"mtime":1667728888417,"results":"70","hashOfConfig":"49"},{"size":4323,"mtime":1667618686395,"results":"71","hashOfConfig":"49"},{"size":4323,"mtime":1667618686395,"results":"72","hashOfConfig":"49"},{"size":2620,"mtime":1667619993016,"results":"73","hashOfConfig":"49"},{"size":1039,"mtime":1667626145817,"results":"74","hashOfConfig":"49"},{"size":153,"mtime":1667622109850,"results":"75","hashOfConfig":"49"},{"size":1099,"mtime":1667627840709,"results":"76","hashOfConfig":"49"},{"size":5325,"mtime":1667719659841,"results":"77","hashOfConfig":"49"},{"size":3926,"mtime":1667719494866,"results":"78","hashOfConfig":"49"},{"size":1797,"mtime":1667633414253,"results":"79","hashOfConfig":"49"},{"size":3903,"mtime":1667716775487,"results":"80","hashOfConfig":"49"},{"size":3764,"mtime":1667806954810,"results":"81","hashOfConfig":"49"},{"size":1209,"mtime":1667651973783,"results":"82","hashOfConfig":"49"},{"size":2390,"mtime":1667664515844,"results":"83","hashOfConfig":"49"},{"size":3500,"mtime":1667881966723,"results":"84","hashOfConfig":"49"},{"size":2390,"mtime":1667670868111,"results":"85","hashOfConfig":"49"},{"size":900,"mtime":1667882583230,"results":"86","hashOfConfig":"49"},{"size":2121,"mtime":1667845939771,"results":"87","hashOfConfig":"49"},{"size":3861,"mtime":1667714645266,"results":"88","hashOfConfig":"49"},{"size":1778,"mtime":1667728500307,"results":"89","hashOfConfig":"49"},{"size":4574,"mtime":1667810873296,"results":"90","hashOfConfig":"49"},{"size":3395,"mtime":1667791593973,"results":"91","hashOfConfig":"49"},{"size":7035,"mtime":1667824176091,"results":"92","hashOfConfig":"49"},{"size":8272,"mtime":1667792034525,"results":"93","hashOfConfig":"49"},{"size":3468,"mtime":1667821013824,"results":"94","hashOfConfig":"49"},{"size":5996,"mtime":1667795953384,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},"nqnou5",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"99"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"99"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"99"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"99"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"99"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"99"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"99"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"99"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"99"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"99"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"99"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"99"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"99"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\store.js",["210","211"],"import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport {\r\n  productsReducer,\r\n  newProductReducer,\r\n  productReducer,\r\n  productDetailsReducer,\r\n  productReviewsReducer,\r\n} from './reducers/productReducers';\r\nimport {\r\n  authReducer,\r\n  userReducer,\r\n  // forgotPasswordReducer,\r\n  // allUsersReducer,\r\n  userDetailsReducer,\r\n} from './reducers/userReducers';\r\nimport { cartReducer } from './reducers/carReducers';\r\nimport {\r\n  newOrderReducer,\r\n  myOrdersReducer,\r\n  orderDetailsReducer,\r\n  allOrdersReducer,\r\n  orderReducer,\r\n} from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n  products: productsReducer,\r\n  productDetails: productDetailsReducer,\r\n  newProduct: newProductReducer,\r\n  product: productReducer,\r\n  auth: authReducer,\r\n  user: userReducer,\r\n\r\n  // userDetails: userDetailsReducer,\r\n\r\n  cart: cartReducer,\r\n  newOrder: newOrderReducer,\r\n  myOrders: myOrdersReducer,\r\n  allOrders: allOrdersReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  order: orderReducer,\r\n});\r\n\r\nlet initialState = {\r\n  cart: {\r\n    cartItems: localStorage.getItem('cartItems')\r\n      ? JSON.parse(localStorage.getItem('cartItems'))\r\n      : [],\r\n    shippingInfo: localStorage.getItem('shippingInfo')\r\n      ? JSON.parse(localStorage.getItem('shippingInfo'))\r\n      : {},\r\n  },\r\n};\r\n\r\nconst middlware = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middlware))\r\n);\r\n\r\nexport default store;\r\n",["212","213"],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\index.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\App.jsx",["214","215","216","217","218","219","220"],"import React from 'react';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Footer from './components/footer';\nimport Header from './components/header';\nimport Home from './components/home';\nimport Login from './components/user/login';\nimport './App.css';\nimport ProductDetails from './components/products/ProductDetails';\n\nimport Cart from './components/cart/cart';\nimport Shipping from './components/cart/shipping';\nimport ConfirmOrder from './components/cart/ConfirmOrder';\nimport OrderSuccess from './components/cart/orderSuccess';\nimport Payment from './components/cart/payment';\nimport ListOrders from './components/order/ListOrders';\nimport OrderDetails from './components/order/orderDetails';\n\nimport Register from './components/user/register';\nimport { loadUser } from './components/action/userActions';\nimport store from './store';\nimport { useEffect } from 'react';\nimport Profile from './components/user/profile';\n\nimport ProtectedRoute from './components/route/protectedRoute';\nimport UpdateProfile from './components/user/UpdateProfile';\nimport UpdatePassword from './components/user/updatePassword';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from '@stripe/react-stripe-js';\n\n//admin\nimport Slidebar from './components/admin/Slidebar';\nimport Dashboard from './components/admin/Dashboard';\nimport ProductList from './components/admin/productList';\nimport NewProduct from './components/admin/newProduct';\nimport { useSelector } from 'react-redux';\nimport UpdateProduct from './components/admin/UpdateProduct';\nimport OrdersList from './components/admin/OrderList';\nimport ProcessOrder from './components/admin/ProcessOrder';\n\nfunction App() {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  const { user, loading } = useSelector((state) => state.auth);\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <div className=\"container-fluid container\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <ProtectedRoute exact path=\"/me\" component={Profile} />\n            <ProtectedRoute exact path=\"/orders/me\" component={ListOrders} />\n            <ProtectedRoute exact path=\"/order/:id\" component={OrderDetails} />\n            <ProtectedRoute\n              exact\n              path=\"/password/update\"\n              component={UpdatePassword}\n            />\n            <Route exact path=\"/me/update\" component={UpdateProfile} />\n            <Route path=\"/search/:keyword\" component={Home} />\n            <Route exact path=\"/cart\" component={Cart} />\n            <ProtectedRoute exact path=\"/shipping\" component={Shipping} />\n            <ProtectedRoute path=\"/confirm\" component={ConfirmOrder} exact />\n            <ProtectedRoute path=\"/success\" component={OrderSuccess} />\n\n            {/* //TODO Route for payment */}\n\n            <ProtectedRoute path=\"/payment\" component={Payment} />\n\n            <ProtectedRoute\n              exact\n              path=\"/password/update\"\n              component={UpdatePassword}\n            />\n            <Route exact path=\"/product/:id\" component={ProductDetails} />\n          </Switch>\n        </div>\n        <ProtectedRoute\n          exact\n          path=\"/dashboard\"\n          isAdmin={true}\n          component={Dashboard}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/admin/products\"\n          isAdmin={true}\n          component={ProductList}\n        />\n\n        <ProtectedRoute\n          exact\n          path=\"/admin/product\"\n          isAdmin={true}\n          component={NewProduct}\n        />\n\n        <ProtectedRoute\n          exact\n          path=\"/admin/product/:id\"\n          isAdmin={true}\n          component={UpdateProduct}\n        />\n        <ProtectedRoute\n          path=\"/admin/orders\"\n          isAdmin={true}\n          component={OrdersList}\n          exact\n        />\n        <ProtectedRoute\n          path=\"/admin/order/:id\"\n          isAdmin={true}\n          component={ProcessOrder}\n          exact\n        />\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\reducers\\productReducers.js",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\constants\\productConstans.js",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\footer.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\header.jsx",["221"],"import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { Fragment } from 'react';\r\nimport Search from '../layouts/Search';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useAlert } from 'react-alert';\r\nimport { logout } from './action/userActions';\r\n\r\nconst Header = () => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  const { user, loading } = useSelector((state) => state.auth);\r\n  const { cartItems } = useSelector((state) => state.cart);\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    alert.success('Logged out successfully.');\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <nav class=\"navbar row\">\r\n        <div class=\"col-12 col-md-3\">\r\n          <div class=\"navbar-brand\">\r\n            <img src=\"/images.logo.png\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n          <Route render={({ history }) => <Search history={history} />} />\r\n        </div>\r\n        <div class=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\r\n          <Link to=\"/cart\">\r\n            <span id=\"cart\" class=\"ml-3\">\r\n              Cart\r\n            </span>\r\n            <span class=\"ml-1\" id=\"cart_count\">\r\n              {cartItems.length}\r\n            </span>\r\n          </Link>\r\n\r\n          {user ? (\r\n            <div className=\"ml-4 dropdown d-inline\">\r\n              <Link\r\n                to=\"#!\"\r\n                className=\"btn dropdown-toggle text-white mr-4\"\r\n                type=\"button\"\r\n                id=\"dropDownMenuButton\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <figure className=\"avatar avatar-nav\">\r\n                  <img\r\n                    src={user.avatar && user.avatar.url}\r\n                    alt={user && user.name}\r\n                    className=\"rounded-circle\"\r\n                  />\r\n                </figure>\r\n                <span>{user && user.name}</span>\r\n              </Link>\r\n\r\n              <div\r\n                className=\"dropdown-menu\"\r\n                aria-labelledby=\"dropDownMenuButton\"\r\n              >\r\n                {user && user.role === 'admin' && (\r\n                  <Link className=\"dropdown-item\" to=\"/dashboard\">\r\n                    Dashboard\r\n                  </Link>\r\n                )}\r\n                <Link className=\"dropdown-item\" to=\"/orders/me\">\r\n                  Orders\r\n                </Link>\r\n                <Link className=\"dropdown-item\" to=\"/me\">\r\n                  Profile\r\n                </Link>\r\n                <Link\r\n                  className=\"dropdown-item text-danger\"\r\n                  to=\"/\"\r\n                  onClick={logoutHandler}\r\n                >\r\n                  Logout\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            !loading && (\r\n              <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">\r\n                Login\r\n              </Link>\r\n            )\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\home.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\MetaData.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\products\\product.jsx",["222","223","224"],"import React from 'react';\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <div class=\"col-sm-12 col-md-6 col-lg-3 my-3\">\r\n      <div class=\"card p-3 rounded\">\r\n        <img\r\n          class=\"card-img-top mx-auto\"\r\n          src=\"https://m.media-amazon.com/images/I/617NtexaW2L._AC_UY218_.jpg\"\r\n        />\r\n        <div class=\"card-body d-flex flex-column\">\r\n          <h5 class=\"card-title\">\r\n            <a href=\"\">{product.name}</a>\r\n          </h5>\r\n          <div class=\"ratings mt-auto\">\r\n            <div class=\"rating-outer\">\r\n              <div\r\n                class=\"rating-inner\"\r\n                style={{ width: `${(product.ratings / 5) * 100}%` }}\r\n              ></div>\r\n            </div>\r\n            <span id=\"no_of_reviews\">( {product.numOfReviews} Reviews)</span>\r\n          </div>\r\n          <p class=\"card-text\">${product.price}</p>\r\n          <a href=\"#\" id=\"view_btn\" class=\"btn btn-block\">\r\n            View Details\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n",["225","226"],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\loader.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\action\\productActions.jsx",["227","228"],"import axios from 'axios';\r\nimport {\r\n  ALL_PRODUCTS_FAIL,\r\n  ALL_PRODUCTS_REQUEST,\r\n  ALL_PRODUCTS_SUCCESS,\r\n  ADMIN_PRODUCTS_FAIL,\r\n  ADMIN_PRODUCTS_REQUEST,\r\n  ADMIN_PRODUCTS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  NEW_PRODUCT_REQUEST,\r\n  NEW_PRODUCT_SUCCESS,\r\n  NEW_PRODUCT_RESET,\r\n  NEW_PRODUCT_FAIL,\r\n  CLEAR_ERRORS,\r\n  DELETE_PRODUCT_REQUEST,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_FAIL,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_REQUEST,\r\n  UPDATE_PRODUCT_FAIL,\r\n} from '../../constants/productConstans';\r\n\r\nexport const getProducts =\r\n  (keyword = '', currentPage = 1, category) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: ALL_PRODUCTS_REQUEST });\r\n\r\n      let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}`;\r\n      if (category) {\r\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&category=${category}`;\r\n      }\r\n      const { data } = await axios.get(link);\r\n\r\n      dispatch({\r\n        type: ALL_PRODUCTS_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ALL_PRODUCTS_FAIL,\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n//get details product\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/product/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n//create product by admin\r\nexport const newProduct = (productData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NEW_PRODUCT_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/v1/admin/product/new`,\r\n      productData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: NEW_PRODUCT_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NEW_PRODUCT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n//get details product admin\r\nexport const getAdminProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_PRODUCTS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/admin/products`);\r\n\r\n    dispatch({\r\n      type: ADMIN_PRODUCTS_SUCCESS,\r\n      payload: data.products,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADMIN_PRODUCTS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete product (Admin)\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_PRODUCT_REQUEST });\r\n\r\n    const { data } = await axios.delete(`/api/v1/admin/product/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_PRODUCT_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_PRODUCT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Update Product (ADMIN)\r\nexport const updateProduct = (id, productData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_PRODUCT_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/v1/admin/product/${id}`,\r\n      productData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_PRODUCT_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_PRODUCT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n//clear error\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_ERRORS,\r\n  });\r\n};\r\n","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\products\\Product.jsx",["229"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <div class=\"col-sm-12 col-md-6 col-lg-3 my-3\">\r\n      <div class=\"card p-3 rounded\">\r\n        {/* //TODO: Images dynamic has bugs */}\r\n        <img\r\n          class=\"card-img-top mx-auto\"\r\n          src=\"https://m.media-amazon.com/images/I/617NtexaW2L._AC_UY218_.jpg\"\r\n        />\r\n        <div class=\"card-body d-flex flex-column\">\r\n          <h5 class=\"card-title\">\r\n            <Link to={`/product/${product._id}`}>{product.name}</Link>\r\n          </h5>\r\n          <div class=\"ratings mt-auto\">\r\n            <div class=\"rating-outer\">\r\n              <div\r\n                class=\"rating-inner\"\r\n                style={{ width: `${(product.ratings / 5) * 100}%` }}\r\n              ></div>\r\n            </div>\r\n            <span id=\"no_of_reviews\">( {product.numOfReviews} Reviews)</span>\r\n          </div>\r\n          <p class=\"card-text\">${product.price}</p>\r\n          <Link\r\n            to={`/product/${product._id}`}\r\n            id=\"view_btn\"\r\n            class=\"btn btn-block\"\r\n          >\r\n            View Details\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\products\\ProductDetails.jsx",["230","231"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport Loader from '../loader';\r\nimport MetaData from '../MetaData';\r\n// import ListReviews from '../review/ListReviews';\r\n\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProductDetails, clearErrors } from '../action/productActions';\r\nimport { addItemToCart } from '../action/cartActions';\r\n\r\n// import { NEW_REVIEW_RESET } from '../../constants/productConstants';\r\n\r\nconst ProductDetails = ({ match }) => {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { loading, error, product } = useSelector(\r\n    (state) => state.productDetails\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductDetails(match.params.id));\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n  }, [dispatch, alert, error, match.params.id]);\r\n\r\n  const addToCart = () => {\r\n    dispatch(addItemToCart(match.params.id, quantity));\r\n    alert.success('Item added to cart');\r\n  };\r\n\r\n  const increaseQty = () => {\r\n    const count = document.querySelector('.count');\r\n\r\n    if (count.valueAsNumber >= product.stock) return;\r\n\r\n    const qty = count.valueAsNumber + 1;\r\n    setQuantity(qty);\r\n  };\r\n\r\n  const decreaseQty = () => {\r\n    const count = document.querySelector('.count');\r\n\r\n    if (count.valueAsNumber <= 1) return;\r\n\r\n    const qty = count.valueAsNumber - 1;\r\n    setQuantity(qty);\r\n  };\r\n\r\n  function setUserRatings() {\r\n    const stars = document.querySelectorAll('.star');\r\n\r\n    stars.forEach((star, index) => {\r\n      star.starValue = index + 1;\r\n\r\n      ['click', 'mouseover', 'mouseout'].forEach(function (e) {\r\n        star.addEventListener(e, showRatings);\r\n      });\r\n    });\r\n\r\n    function showRatings(e) {\r\n      stars.forEach((star, index) => {\r\n        if (e.type === 'click') {\r\n          if (index < this.starValue) {\r\n            star.classList.add('orange');\r\n\r\n            setRating(this.starValue);\r\n          } else {\r\n            star.classList.remove('orange');\r\n          }\r\n        }\r\n\r\n        if (e.type === 'mouseover') {\r\n          if (index < this.starValue) {\r\n            star.classList.add('yellow');\r\n          } else {\r\n            star.classList.remove('yellow');\r\n          }\r\n        }\r\n\r\n        if (e.type === 'mouseout') {\r\n          star.classList.remove('yellow');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title={product.name} />\r\n          <div className=\"row d-flex justify-content-around\">\r\n            <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n              <Carousel pause=\"hover\">\r\n                {product.images &&\r\n                  product.images.map((image) => (\r\n                    <Carousel.Item key={image.public_id}>\r\n                      <img\r\n                        className=\"d-block w-100\"\r\n                        src={image.url}\r\n                        alt={product.title}\r\n                      />\r\n                    </Carousel.Item>\r\n                  ))}\r\n              </Carousel>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-5 mt-5\">\r\n              <h3>{product.name}</h3>\r\n              <p id=\"product_id\">Product # {product._id}</p>\r\n\r\n              <hr />\r\n\r\n              <div className=\"rating-outer\">\r\n                <div\r\n                  className=\"rating-inner\"\r\n                  style={{ width: `${(product.ratings / 5) * 100}%` }}\r\n                ></div>\r\n              </div>\r\n              <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n\r\n              <hr />\r\n\r\n              <p id=\"product_price\">${product.price}</p>\r\n              <div className=\"stockCounter d-inline\">\r\n                <span className=\"btn btn-danger minus\" onClick={decreaseQty}>\r\n                  -\r\n                </span>\r\n\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control count d-inline\"\r\n                  value={quantity}\r\n                  readOnly\r\n                />\r\n\r\n                <span className=\"btn btn-primary plus\" onClick={increaseQty}>\r\n                  +\r\n                </span>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                id=\"cart_btn\"\r\n                className=\"btn btn-primary d-inline ml-4\"\r\n                disabled={product.stock === 0}\r\n                onClick={addToCart}\r\n              >\r\n                Add to Cart\r\n              </button>\r\n\r\n              <hr />\r\n\r\n              <p>\r\n                Status:{' '}\r\n                <span\r\n                  id=\"stock_status\"\r\n                  className={product.stock > 0 ? 'greenColor' : 'redColor'}\r\n                >\r\n                  {product.stock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                </span>\r\n              </p>\r\n\r\n              <hr />\r\n\r\n              <h4 className=\"mt-2\">Description:</h4>\r\n              <p>{product.description}</p>\r\n              <hr />\r\n              <p id=\"product_seller mb-3\">\r\n                Sold by: <strong>{product.seller}</strong>\r\n              </p>\r\n\r\n              <div className=\"row mt-2 mb-5\">\r\n                <div className=\"rating w-50\">\r\n                  <div\r\n                    className=\"modal fade\"\r\n                    id=\"ratingModal\"\r\n                    tabIndex=\"-1\"\r\n                    role=\"dialog\"\r\n                    aria-labelledby=\"ratingModalLabel\"\r\n                    aria-hidden=\"true\"\r\n                  >\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                      <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                          <h5 className=\"modal-title\" id=\"ratingModalLabel\">\r\n                            Submit Review\r\n                          </h5>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                            aria-label=\"Close\"\r\n                          >\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                          <ul className=\"stars\">\r\n                            <li className=\"star\">\r\n                              <i className=\"fa fa-star\"></i>\r\n                            </li>\r\n                            <li className=\"star\">\r\n                              <i className=\"fa fa-star\"></i>\r\n                            </li>\r\n                            <li className=\"star\">\r\n                              <i className=\"fa fa-star\"></i>\r\n                            </li>\r\n                            <li className=\"star\">\r\n                              <i className=\"fa fa-star\"></i>\r\n                            </li>\r\n                            <li className=\"star\">\r\n                              <i className=\"fa fa-star\"></i>\r\n                            </li>\r\n                          </ul>\r\n\r\n                          <textarea\r\n                            name=\"review\"\r\n                            id=\"review\"\r\n                            className=\"form-control mt-3\"\r\n                            value={comment}\r\n                            onChange={(e) => setComment(e.target.value)}\r\n                          ></textarea>\r\n\r\n                          <button\r\n                            className=\"btn my-3 float-right review-btn px-4 text-white\"\r\n                            data-dismiss=\"modal\"\r\n                            aria-label=\"Close\"\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\layouts\\Search.js",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\reducers\\userReducers.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\constants\\userConstants.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\user\\login.jsx",["232"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Loader from '../loader';\r\nimport MetaData from '../MetaData';\r\n\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login, clearErrors } from '../action/userActions';\r\n\r\nconst Login = ({ history, location }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { isAuthenticated, error, loading } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      history.push(redirect);\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n  }, [dispatch, alert, isAuthenticated, error, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title={'Login'} />\r\n\r\n          <div className=\"row wrapper\">\r\n            <div className=\"col-10 col-lg-5\">\r\n              <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                <h1 className=\"mb-3\">Login</h1>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email_field\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email_field\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password_field\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password_field\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <Link to=\"/password/forgot\" className=\"float-right mb-4\">\r\n                  Forgot Password?\r\n                </Link>\r\n\r\n                <button\r\n                  id=\"login_button\"\r\n                  type=\"submit\"\r\n                  className=\"btn btn-block py-3\"\r\n                >\r\n                  LOGIN\r\n                </button>\r\n\r\n                <Link to=\"/register\" className=\"float-right mt-3\">\r\n                  New User?\r\n                </Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\action\\userActions.jsx",["233"],"import axios from 'axios';\r\n\r\nimport {\r\n  LOGIN_REQUEST,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_FAIL,\r\n  CLEAR_ERRORS,\r\n  REGISTER_USER_REQUEST,\r\n  REGISTER_USER_SUCCESS,\r\n  REGISTER_USER_FAIL,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAIL,\r\n  UPDATE_PROFILE_REQUEST,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_FAIL,\r\n  UPDATE_PROFILE_RESET,\r\n  UPDATE_PASSWORD_REQUEST,\r\n  UPDATE_PASSWORD_SUCCESS,\r\n} from '../../constants/userConstants';\r\n\r\n///login action\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/v1/login',\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: data.user,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Register user\r\nexport const register = (userData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: REGISTER_USER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post('/api/v1/register', userData, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_USER_SUCCESS,\r\n      payload: data.user,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: REGISTER_USER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProfile = (userData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_PROFILE_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put('/api/v1/me/update', userData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_PROFILE_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n//update password:\r\nexport const updatePassword = (passwords) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_PASSWORD_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      '/api/v1/password/update',\r\n      passwords,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_PASSWORD_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_PROFILE_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Load user\r\nexport const loadUser = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LOAD_USER_REQUEST });\r\n\r\n    const { data } = await axios.get('/api/v1/me');\r\n\r\n    dispatch({\r\n      type: LOAD_USER_SUCCESS,\r\n      payload: data.user,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOAD_USER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout user\r\nexport const logout = () => async (dispatch) => {\r\n  try {\r\n    await axios.get('/api/v1/logout');\r\n\r\n    dispatch({\r\n      type: LOGOUT_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGOUT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n//clear error\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_ERRORS,\r\n  });\r\n};\r\n","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\user\\register.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\user\\profile.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\route\\protectedRoute.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\user\\updateProfile.jsx",["234"],"import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nimport MetaData from '../MetaData';\r\n\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  updateProfile,\r\n  loadUser,\r\n  clearErrors,\r\n} from '../../actions/userActions';\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants';\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [avatar, setAvatar] = useState('');\r\n  const [avatarPreview, setAvatarPreview] = useState('/images/logo.png');\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { error, isUpdated, loading } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setAvatarPreview(user.avatar.url);\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isUpdated) {\r\n      alert.success('User updated successfully');\r\n      dispatch(loadUser());\r\n\r\n      history.push('/me');\r\n\r\n      dispatch({\r\n        type: UPDATE_PROFILE_RESET,\r\n      });\r\n    }\r\n  }, [dispatch, alert, error, history, isUpdated]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.set('name', name);\r\n    formData.set('email', email);\r\n    formData.set('avatar', avatar);\r\n\r\n    dispatch(updateProfile(formData));\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setAvatarPreview(reader.result);\r\n        setAvatar(reader.result);\r\n      }\r\n    };\r\n\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'Update Profile'} />\r\n\r\n      <div className=\"row wrapper\">\r\n        <div className=\"col-10 col-lg-5\">\r\n          <form\r\n            className=\"shadow-lg\"\r\n            onSubmit={submitHandler}\r\n            encType=\"multipart/form-data\"\r\n          >\r\n            <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Name</label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"name_field\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email_field\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"avatar_upload\">Avatar</label>\r\n              <div className=\"d-flex align-items-center\">\r\n                <div>\r\n                  <figure className=\"avatar mr-3 item-rtl\">\r\n                    <img\r\n                      src={avatarPreview}\r\n                      className=\"rounded-circle\"\r\n                      alt=\"Avatar Preview\"\r\n                    />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"custom-file\">\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"avatar\"\r\n                    className=\"custom-file-input\"\r\n                    id=\"customFile\"\r\n                    accept=\"image/*\"\r\n                    onChange={onChange}\r\n                  />\r\n                  <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                    Choose Avatar\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn update-btn btn-block mt-4 mb-3\"\r\n              disabled={loading ? true : false}\r\n            >\r\n              Update\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n",["235","236"],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\user\\UpdateProfile.jsx",["237"],"import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nimport MetaData from '../MetaData';\r\n\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateProfile, loadUser, clearErrors } from '../action/userActions';\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants';\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [avatar, setAvatar] = useState('');\r\n  const [avatarPreview, setAvatarPreview] = useState('/images/logo.png');\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { error, isUpdated, loading } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setAvatarPreview(user.avatar.url);\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isUpdated) {\r\n      alert.success('User updated successfully');\r\n      dispatch(loadUser());\r\n\r\n      history.push('/me');\r\n\r\n      dispatch({\r\n        type: UPDATE_PROFILE_RESET,\r\n      });\r\n    }\r\n  }, [dispatch, alert, error, history, isUpdated]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.set('name', name);\r\n    formData.set('email', email);\r\n    formData.set('avatar', avatar);\r\n\r\n    dispatch(updateProfile(formData));\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setAvatarPreview(reader.result);\r\n        setAvatar(reader.result);\r\n      }\r\n    };\r\n\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'Update Profile'} />\r\n\r\n      <div className=\"row wrapper\">\r\n        <div className=\"col-10 col-lg-5\">\r\n          <form\r\n            className=\"shadow-lg\"\r\n            onSubmit={submitHandler}\r\n            encType=\"multipart/form-data\"\r\n          >\r\n            <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Name</label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"name_field\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email_field\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"avatar_upload\">Avatar</label>\r\n              <div className=\"d-flex align-items-center\">\r\n                <div>\r\n                  <figure className=\"avatar mr-3 item-rtl\">\r\n                    <img\r\n                      src={avatarPreview}\r\n                      className=\"rounded-circle\"\r\n                      alt=\"Avatar Preview\"\r\n                    />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"custom-file\">\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"avatar\"\r\n                    className=\"custom-file-input\"\r\n                    id=\"customFile\"\r\n                    accept=\"image/*\"\r\n                    onChange={onChange}\r\n                  />\r\n                  <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                    Choose Avatar\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn update-btn btn-block mt-4 mb-3\"\r\n              disabled={loading ? true : false}\r\n            >\r\n              Update\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\user\\updatePassword.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\reducers\\carReducers.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\constants\\cartConstants.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\action\\cartActions.js",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\cart\\cart.jsx",["238"],"import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MetaData from '../MetaData';\r\n\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addItemToCart, removeItemFromCart } from '../action/cartActions';\r\n\r\nconst Cart = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { cartItems } = useSelector((state) => state.cart);\r\n\r\n  const removeCartItemHandler = (id) => {\r\n    dispatch(removeItemFromCart(id));\r\n  };\r\n\r\n  const increaseQty = (id, quantity, stock) => {\r\n    const newQty = quantity + 1;\r\n\r\n    if (newQty > stock) return;\r\n\r\n    dispatch(addItemToCart(id, newQty));\r\n  };\r\n\r\n  const decreaseQty = (id, quantity) => {\r\n    const newQty = quantity - 1;\r\n\r\n    if (newQty <= 0) return;\r\n\r\n    dispatch(addItemToCart(id, newQty));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping');\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'Your Cart'} />\r\n      {cartItems.length === 0 ? (\r\n        <h2 className=\"mt-5\">Your Cart is Empty</h2>\r\n      ) : (\r\n        <Fragment>\r\n          <h2 className=\"mt-5\">\r\n            Your Cart: <b>{cartItems.length} items</b>\r\n          </h2>\r\n\r\n          <div className=\"row d-flex justify-content-between\">\r\n            <div className=\"col-12 col-lg-8\">\r\n              {cartItems.map((item) => (\r\n                <Fragment>\r\n                  <hr />\r\n\r\n                  <div className=\"cart-item\" key={item.product}>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-4 col-lg-3\">\r\n                        <img\r\n                          src={item.image}\r\n                          alt=\"Laptop\"\r\n                          height=\"90\"\r\n                          width=\"115\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"col-5 col-lg-3\">\r\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                      </div>\r\n\r\n                      <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                        <p id=\"card_item_price\">${item.price}</p>\r\n                      </div>\r\n\r\n                      <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                        <div className=\"stockCounter d-inline\">\r\n                          <span\r\n                            className=\"btn btn-danger minus\"\r\n                            onClick={() =>\r\n                              decreaseQty(item.product, item.quantity)\r\n                            }\r\n                          >\r\n                            -\r\n                          </span>\r\n\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control count d-inline\"\r\n                            value={item.quantity}\r\n                            readOnly\r\n                          />\r\n\r\n                          <span\r\n                            className=\"btn btn-primary plus\"\r\n                            onClick={() =>\r\n                              increaseQty(\r\n                                item.product,\r\n                                item.quantity,\r\n                                item.stock\r\n                              )\r\n                            }\r\n                          >\r\n                            +\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                        <i\r\n                          id=\"delete_cart_item\"\r\n                          className=\"fa fa-trash btn btn-danger\"\r\n                          onClick={() => removeCartItemHandler(item.product)}\r\n                        ></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                </Fragment>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3 my-4\">\r\n              <div id=\"order_summary\">\r\n                <h4>Order Summary</h4>\r\n                <hr />\r\n                <p>\r\n                  Subtotal:{' '}\r\n                  <span className=\"order-summary-values\">\r\n                    {cartItems.reduce(\r\n                      (acc, item) => acc + Number(item.quantity),\r\n                      0\r\n                    )}{' '}\r\n                    (Units)\r\n                  </span>\r\n                </p>\r\n                <p>\r\n                  Est. total:{' '}\r\n                  <span className=\"order-summary-values\">\r\n                    $\r\n                    {cartItems\r\n                      .reduce(\r\n                        (acc, item) => acc + item.quantity * item.price,\r\n                        0\r\n                      )\r\n                      .toFixed(2)}\r\n                  </span>\r\n                </p>\r\n\r\n                <hr />\r\n                <button\r\n                  id=\"checkout_btn\"\r\n                  className=\"btn btn-primary btn-block\"\r\n                  onClick={checkoutHandler}\r\n                >\r\n                  Check out\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\cart\\shipping.js",["239","240","241"],"import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from '../loader';\r\nimport MetaData from '../MetaData';\r\nimport { countries } from 'countries-list';\r\nimport CheckoutSteps from './checkOutSteps';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveShippingInfo } from '../action/cartActions';\r\nimport { useState } from 'react';\r\n\r\nconst Shipping = ({ history }) => {\r\n  const countriesList = Object.values(countries);\r\n  const { shippingInfo } = useSelector((state) => state.cart);\r\n  const [address, setAddress] = useState(shippingInfo.address);\r\n  const [city, setCity] = useState(shippingInfo.city);\r\n  const [postalCode, setpostalCode] = useState(shippingInfo.postalCode);\r\n  const [country, setCountry] = useState(shippingInfo.country);\r\n  const [phoneNo, setphoneNo] = useState(shippingInfo.phoneNo);\r\n\r\n  const dispatch = useDispatch();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingInfo({ address, city, phoneNo, postalCode, country }));\r\n    history.push('/confirm');\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'Shipping Information'}></MetaData>\r\n      <CheckoutSteps shipping />\r\n      <div className=\"row wrapper\">\r\n        <div classNameName=\"col-10 col-lg-5\">\r\n          <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n            <h1 className=\"mb-4\">Shipping Info</h1>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address_field\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"address_field\"\r\n                className=\"form-control\"\r\n                value={address}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"city_field\">City</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"city_field\"\r\n                className=\"form-control\"\r\n                value={city}\r\n                onChange={(e) => setCity(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"phone_field\">Phone No</label>\r\n              <input\r\n                type=\"phone\"\r\n                id=\"phone_field\"\r\n                className=\"form-control\"\r\n                value={phoneNo}\r\n                onChange={(e) => setphoneNo(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"postal_code_field\">Postal Code</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"postal_code_field\"\r\n                className=\"form-control\"\r\n                value={postalCode}\r\n                onChange={(e) => setpostalCode(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"country_field\">Country</label>\r\n              <select\r\n                id=\"country_field\"\r\n                className=\"form-control\"\r\n                value={country}\r\n                onChange={(e) => setCountry(e.target.value)}\r\n                required\r\n              >\r\n                {countriesList.map((country) => (\r\n                  <option key={country.name} value={country.name}>\r\n                    {country.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <button\r\n              id=\"shipping_btn\"\r\n              type=\"submit\"\r\n              className=\"btn btn-block py-3\"\r\n            >\r\n              CONTINUE\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Shipping;\r\n","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\cart\\checkOutSteps.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\cart\\ConfirmOrder.jsx",["242","243","244","245","246"],"import { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createOrder, clearErrors } from '../action/orderActions';\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MetaData from '../MetaData';\r\nimport CheckoutSteps from './checkOutSteps';\r\n\r\nconst ConfirmOrder = ({ history }) => {\r\n  const alert = useAlert();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { error } = useSelector((state) => state.newOrder);\r\n  const { cartItems, shippingInfo } = useSelector((state) => state.cart);\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  // Calculate Order Prices\r\n  const itemsPrice = cartItems.reduce(\r\n    (acc, item) => acc + item.price * item.quantity,\r\n    0\r\n  );\r\n  const shippingPrice = itemsPrice > 200 ? 0 : 25;\r\n  const taxPrice = Number((0.05 * itemsPrice).toFixed(2));\r\n  const totalPrice = (itemsPrice + shippingPrice + taxPrice).toFixed(2);\r\n\r\n  const processToPayment = () => {\r\n    const data = {\r\n      itemsPrice: itemsPrice.toFixed(2),\r\n      shippingPrice,\r\n      taxPrice,\r\n      totalPrice,\r\n    };\r\n\r\n    sessionStorage.setItem('orderInfo', JSON.stringify(data));\r\n    history.push('/payment');\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'Confirm Order'} />\r\n\r\n      <CheckoutSteps shipping confirmOrder />\r\n\r\n      <div className=\"row d-flex justify-content-between\">\r\n        <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\r\n          <h4 className=\"mb-3\">Shipping Info</h4>\r\n          <p>\r\n            <b>Name:</b> {user && user.name}\r\n          </p>\r\n          <p>\r\n            <b>Phone:</b> {shippingInfo.phoneNo}\r\n          </p>\r\n          <p className=\"mb-4\">\r\n            <b>Address:</b>{' '}\r\n            {`${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`}\r\n          </p>\r\n\r\n          <hr />\r\n          <h4 className=\"mt-4\">Your Cart Items:</h4>\r\n\r\n          {cartItems.map((item) => (\r\n            <Fragment>\r\n              <hr />\r\n              <div className=\"cart-item my-1\" key={item.product}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-4 col-lg-2\">\r\n                    <img src={item.image} alt=\"Laptop\" height=\"45\" width=\"65\" />\r\n                  </div>\r\n\r\n                  <div className=\"col-5 col-lg-6\">\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </div>\r\n\r\n                  <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\r\n                    <p>\r\n                      {item.quantity} x ${item.price} ={' '}\r\n                      <b>${(item.quantity * item.price).toFixed(2)}</b>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n            </Fragment>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"col-12 col-lg-3 my-4\">\r\n          <div id=\"order_summary\">\r\n            <h4>Order Summary</h4>\r\n            <hr />\r\n            <p>\r\n              Subtotal:{' '}\r\n              <span className=\"order-summary-values\">${itemsPrice}</span>\r\n            </p>\r\n            <p>\r\n              Shipping:{' '}\r\n              <span className=\"order-summary-values\">${shippingPrice}</span>\r\n            </p>\r\n            <p>\r\n              Tax: <span className=\"order-summary-values\">${taxPrice}</span>\r\n            </p>\r\n\r\n            <hr />\r\n\r\n            <p>\r\n              Total: <span className=\"order-summary-values\">${totalPrice}</span>\r\n            </p>\r\n\r\n            <hr />\r\n            <button\r\n              id=\"checkout_btn\"\r\n              className=\"btn btn-primary btn-block\"\r\n              onClick={processToPayment}\r\n            >\r\n              Proceed to Payment\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ConfirmOrder;\r\n","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\reducers\\orderReducers.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\constants\\orderConstants.js",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\order\\listOrders.jsx",[],["247","248"],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\action\\orderActions.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\order\\ListOrders.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\cart\\orderSuccess.jsx",["249","250"],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\cart\\payment.js",["251","252"],"import React, { Fragment, useEffect } from 'react';\r\n\r\nimport MetaData from '../MetaData';\r\nimport CheckoutSteps from './checkOutSteps';\r\n\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createOrder, clearErrors } from '../action/orderActions';\r\n\r\nimport axios from 'axios';\r\n\r\nconst Payment = ({ history }) => {\r\n  const alert = useAlert();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { cartItems, shippingInfo } = useSelector((state) => state.cart);\r\n  const { error } = useSelector((state) => state.newOrder);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n  }, [dispatch, alert, error]);\r\n\r\n  const order = {\r\n    orderItems: cartItems,\r\n    shippingInfo,\r\n  };\r\n\r\n  const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\r\n  if (orderInfo) {\r\n    order.itemsPrice = orderInfo.itemsPrice;\r\n    order.shippingPrice = orderInfo.shippingPrice;\r\n    order.taxPrice = orderInfo.taxPrice;\r\n    order.totalPrice = orderInfo.totalPrice;\r\n  }\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    document.querySelector('#pay_btn').disabled = true;\r\n\r\n    try {\r\n      dispatch(createOrder(order));\r\n\r\n      history.push('/success');\r\n    } catch (error) {\r\n      document.querySelector('#pay_btn').disabled = false;\r\n      alert.error(error.response.data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'Payment'} />\r\n\r\n      <CheckoutSteps shipping confirmOrder payment />\r\n\r\n      <div className=\"row wrapper\">\r\n        <div className=\"col-10 col-lg-5\">\r\n          <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n            <h1 className=\"mb-4\">{`Your total amount is $${\r\n              orderInfo && orderInfo.totalPrice\r\n            }`}</h1>\r\n\r\n            <button id=\"pay_btn\" type=\"submit\" className=\"btn btn-block py-3\">\r\n              Order!\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\order\\orderDetails.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\admin\\Slidebar.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\admin\\Dashboard.jsx",["253","254","255","256"],"import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MetaData from '../MetaData';\r\nimport Loader from '../loader';\r\nimport Slidebar from './Slidebar';\r\nimport { getAdminProducts, clearErrors } from '../action/productActions';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const { products } = useSelector((state) => state.products);\r\n  const { orders } = useSelector((state) => state.allOrders);\r\n\r\n  let outofStock = 0;\r\n  products.forEach((product) => {\r\n    if (product.stock === 0) {\r\n      outofStock += 1;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {}, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-10 col-md-2\">\r\n            <Slidebar></Slidebar>\r\n          </div>\r\n\r\n          <div className=\"col-6 col-md-10\">\r\n            <h1 className=\"my-4\">Dashboard</h1>\r\n            <div className=\"row pr-4\">\r\n              <div className=\"col-xl-12 col-sm-12 mb-3\">\r\n                <div className=\"card text-white bg-primary o-hidden h-100\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"text-center card-font-size\">\r\n                      Total Amount\r\n                      <br /> <b>$4567</b>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row pr-4\">\r\n              <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                <div className=\"card text-white bg-success o-hidden h-100\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"text-center card-font-size\">\r\n                      Products\r\n                      <br /> <b>{products && products.length}</b>\r\n                    </div>\r\n                  </div>\r\n                  <Link\r\n                    className=\"card-footer text-white clearfix small z-1\"\r\n                    to=\"/admin/products\"\r\n                  >\r\n                    <span className=\"float-left\">View Details</span>\r\n                    <span className=\"float-right\">\r\n                      <i className=\"fa fa-angle-right\"></i>\r\n                    </span>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                <div className=\"card text-white bg-danger o-hidden h-100\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"text-center card-font-size\">\r\n                      Orders\r\n                      <br /> <b>{orders && orders.length}</b>\r\n                    </div>\r\n                  </div>\r\n                  <Link\r\n                    className=\"card-footer text-white clearfix small z-1\"\r\n                    to=\"/admin/orders\"\r\n                  >\r\n                    <span className=\"float-left\">View Details</span>\r\n                    <span className=\"float-right\">\r\n                      <i className=\"fa fa-angle-right\"></i>\r\n                    </span>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                <div className=\"card text-white bg-info o-hidden h-100\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"text-center card-font-size\">\r\n                      Users\r\n                      <br /> <b>45</b>\r\n                    </div>\r\n                  </div>\r\n                  <Link\r\n                    className=\"card-footer text-white clearfix small z-1\"\r\n                    to=\"/admin/users\"\r\n                  >\r\n                    <span className=\"float-left\">View Details</span>\r\n                    <span className=\"float-right\">\r\n                      <i className=\"fa fa-angle-right\"></i>\r\n                    </span>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                <div className=\"card text-white bg-warning o-hidden h-100\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"text-center card-font-size\">\r\n                      Out of Stock\r\n                      <br /> <b>{outofStock}</b>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\admin\\productList.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\admin\\newProduct.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\admin\\UpdateProduct.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\admin\\OrderList.jsx",[],"G:\\Academics\\ekbana\\Node JS\\Ecommerce-NodeJS-\\frontend\\src\\components\\admin\\ProcessOrder.jsx",[],{"ruleId":"257","severity":1,"message":"258","line":10,"column":3,"nodeType":"259","messageId":"260","endLine":10,"endColumn":24},{"ruleId":"257","severity":1,"message":"261","line":17,"column":3,"nodeType":"259","messageId":"260","endLine":17,"endColumn":21},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"257","severity":1,"message":"266","line":28,"column":10,"nodeType":"259","messageId":"260","endLine":28,"endColumn":18},{"ruleId":"257","severity":1,"message":"267","line":29,"column":8,"nodeType":"259","messageId":"260","endLine":29,"endColumn":13},{"ruleId":"257","severity":1,"message":"268","line":30,"column":10,"nodeType":"259","messageId":"260","endLine":30,"endColumn":20},{"ruleId":"257","severity":1,"message":"269","line":31,"column":10,"nodeType":"259","messageId":"260","endLine":31,"endColumn":18},{"ruleId":"257","severity":1,"message":"270","line":34,"column":8,"nodeType":"259","messageId":"260","endLine":34,"endColumn":16},{"ruleId":"257","severity":1,"message":"271","line":48,"column":11,"nodeType":"259","messageId":"260","endLine":48,"endColumn":15},{"ruleId":"257","severity":1,"message":"272","line":48,"column":17,"nodeType":"259","messageId":"260","endLine":48,"endColumn":24},{"ruleId":"273","severity":1,"message":"274","line":23,"column":13,"nodeType":"275","endLine":23,"endColumn":43},{"ruleId":"273","severity":1,"message":"274","line":7,"column":9,"nodeType":"275","endLine":10,"endColumn":11},{"ruleId":"276","severity":1,"message":"277","line":13,"column":13,"nodeType":"275","endLine":13,"endColumn":24},{"ruleId":"276","severity":1,"message":"277","line":25,"column":11,"nodeType":"275","endLine":25,"endColumn":59},{"ruleId":"262","replacedBy":"278"},{"ruleId":"264","replacedBy":"279"},{"ruleId":"257","severity":1,"message":"280","line":14,"column":3,"nodeType":"259","messageId":"260","endLine":14,"endColumn":20},{"ruleId":"257","severity":1,"message":"281","line":33,"column":13,"nodeType":"259","messageId":"260","endLine":33,"endColumn":17},{"ruleId":"273","severity":1,"message":"274","line":9,"column":9,"nodeType":"275","endLine":12,"endColumn":11},{"ruleId":"257","severity":1,"message":"282","line":16,"column":10,"nodeType":"259","messageId":"260","endLine":16,"endColumn":16},{"ruleId":"257","severity":1,"message":"283","line":58,"column":12,"nodeType":"259","messageId":"260","endLine":58,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":33,"column":6,"nodeType":"286","endLine":33,"endColumn":56,"suggestions":"287"},{"ruleId":"257","severity":1,"message":"288","line":19,"column":3,"nodeType":"259","messageId":"260","endLine":19,"endColumn":23},{"ruleId":"284","severity":1,"message":"289","line":48,"column":6,"nodeType":"286","endLine":48,"endColumn":50,"suggestions":"290"},{"ruleId":"262","replacedBy":"291"},{"ruleId":"264","replacedBy":"292"},{"ruleId":"284","severity":1,"message":"289","line":44,"column":6,"nodeType":"286","endLine":44,"endColumn":50,"suggestions":"293"},{"ruleId":"257","severity":1,"message":"294","line":6,"column":10,"nodeType":"259","messageId":"260","endLine":6,"endColumn":18},{"ruleId":"257","severity":1,"message":"295","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":14},{"ruleId":"257","severity":1,"message":"296","line":3,"column":8,"nodeType":"259","messageId":"260","endLine":3,"endColumn":14},{"ruleId":"257","severity":1,"message":"294","line":7,"column":10,"nodeType":"259","messageId":"260","endLine":7,"endColumn":18},{"ruleId":"257","severity":1,"message":"297","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":21},{"ruleId":"257","severity":1,"message":"298","line":3,"column":23,"nodeType":"259","messageId":"260","endLine":3,"endColumn":34},{"ruleId":"257","severity":1,"message":"299","line":12,"column":9,"nodeType":"259","messageId":"260","endLine":12,"endColumn":14},{"ruleId":"257","severity":1,"message":"300","line":14,"column":9,"nodeType":"259","messageId":"260","endLine":14,"endColumn":17},{"ruleId":"257","severity":1,"message":"301","line":16,"column":11,"nodeType":"259","messageId":"260","endLine":16,"endColumn":16},{"ruleId":"262","replacedBy":"302"},{"ruleId":"264","replacedBy":"303"},{"ruleId":"257","severity":1,"message":"304","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":19},{"ruleId":"257","severity":1,"message":"305","line":6,"column":10,"nodeType":"259","messageId":"260","endLine":6,"endColumn":21},{"ruleId":"257","severity":1,"message":"267","line":10,"column":8,"nodeType":"259","messageId":"260","endLine":10,"endColumn":13},{"ruleId":"257","severity":1,"message":"271","line":17,"column":11,"nodeType":"259","messageId":"260","endLine":17,"endColumn":15},{"ruleId":"257","severity":1,"message":"306","line":4,"column":8,"nodeType":"259","messageId":"260","endLine":4,"endColumn":16},{"ruleId":"257","severity":1,"message":"296","line":5,"column":8,"nodeType":"259","messageId":"260","endLine":5,"endColumn":14},{"ruleId":"257","severity":1,"message":"307","line":7,"column":10,"nodeType":"259","messageId":"260","endLine":7,"endColumn":26},{"ruleId":"257","severity":1,"message":"298","line":7,"column":28,"nodeType":"259","messageId":"260","endLine":7,"endColumn":39},"no-unused-vars","'productReviewsReducer' is defined but never used.","Identifier","unusedVar","'userDetailsReducer' is defined but never used.","no-native-reassign",["308"],"no-negated-in-lhs",["309"],"'useState' is defined but never used.","'axios' is defined but never used.","'loadStripe' is defined but never used.","'Elements' is defined but never used.","'Slidebar' is defined but never used.","'user' is assigned a value but never used.","'loading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["308"],["309"],"'NEW_PRODUCT_RESET' is defined but never used.","'link' is assigned a value but never used.","'rating' is assigned a value but never used.","'setUserRatings' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.","ArrayExpression",["310"],"'UPDATE_PROFILE_RESET' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["311"],["308"],["309"],["312"],"'useAlert' is defined but never used.","'Link' is defined but never used.","'Loader' is defined but never used.","'createOrder' is defined but never used.","'clearErrors' is defined but never used.","'alert' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'error' is assigned a value but never used.",["308"],["309"],"'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'MetaData' is defined but never used.","'getAdminProducts' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"315","fix":"317"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"318","text":"319"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"320","text":"321"},{"range":"322","text":"321"},[894,944],"[dispatch, alert, isAuthenticated, error, history, redirect]",[1261,1305],"[dispatch, alert, error, history, isUpdated, user]",[1246,1290]]